version: '3.9'

services:
  # AI Module - Python ML Services
  ai-module:
    build:
      context: ../ai-module
      dockerfile: Dockerfile
    container_name: vbs-ai-module
    ports:
      - "8001:8001"
    environment:
      - PYTHONUNBUFFERED=1
      - MODEL_PATH=/models
      - REDIS_URL=redis://redis:6379
      - MONGODB_URL=mongodb://vbs_user:vbs_pass@mongodb:27017/vbs_db
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    volumes:
      - ../ai-module:/app
      - model-cache:/models
      - embeddings-data:/embeddings
    depends_on:
      - mongodb
      - redis
      - minio
    networks:
      - vbs-network
    restart: unless-stopped

  # Chat Module - Go API Server
  chat-module:
    build:
      context: ../chat-module
      dockerfile: Dockerfile
    container_name: vbs-chat-module
    ports:
      - "8000:8000"
    environment:
      - AI_SERVICE_URL=http://ai-module:8001
      - REDIS_URL=redis://redis:6379
      - MONGODB_URL=mongodb://vbs_user:vbs_pass@mongodb:27017/vbs_db
      - JWT_SECRET=your-secret-key-change-in-production
    volumes:
      - ../chat-module:/app
    depends_on:
      - ai-module
      - mongodb
      - redis
    networks:
      - vbs-network
    restart: unless-stopped

  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: vbs-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=adminpass
      - MONGO_INITDB_DATABASE=vbs_db
    volumes:
      - mongodb-data:/data/db
      - ../shared/database/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    ports:
      - "27017:27017"
    networks:
      - vbs-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: vbs-redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - vbs-network
    restart: unless-stopped

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: vbs-minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - vbs-network
    restart: unless-stopped

  # Web UI - Next.js Frontend
  web-ui:
    build:
      context: ../web-ui
      dockerfile: Dockerfile
    container_name: vbs-web-ui
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
    volumes:
      - ../web-ui:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - chat-module
    networks:
      - vbs-network
    restart: unless-stopped

  # Nginx Reverse Proxy (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: vbs-nginx
    volumes:
      - ../deploy/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web-ui
      - chat-module
      - ai-module
    networks:
      - vbs-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  mongodb-data:
  redis-data:
  minio-data:
  model-cache:
  embeddings-data:

networks:
  vbs-network:
    driver: bridge